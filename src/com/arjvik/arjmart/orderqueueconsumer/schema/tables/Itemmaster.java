/*
 * This file is generated by jOOQ.
 */
package com.arjvik.arjmart.orderqueueconsumer.schema.tables;


import com.arjvik.arjmart.orderqueueconsumer.schema.Arjmart;
import com.arjvik.arjmart.orderqueueconsumer.schema.Indexes;
import com.arjvik.arjmart.orderqueueconsumer.schema.Keys;
import com.arjvik.arjmart.orderqueueconsumer.schema.tables.records.ItemmasterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Itemmaster extends TableImpl<ItemmasterRecord> {

    private static final long serialVersionUID = 211979335;

    /**
     * The reference instance of <code>arjmart.ItemMaster</code>
     */
    public static final Itemmaster ITEMMASTER = new Itemmaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemmasterRecord> getRecordType() {
        return ItemmasterRecord.class;
    }

    /**
     * The column <code>arjmart.ItemMaster.SKU</code>.
     */
    public final TableField<ItemmasterRecord, Integer> SKU = createField("SKU", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.ItemMaster.ItemName</code>.
     */
    public final TableField<ItemmasterRecord, String> ITEMNAME = createField("ItemName", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>arjmart.ItemMaster.ItemThumbnails</code>.
     */
    public final TableField<ItemmasterRecord, String> ITEMTHUMBNAILS = createField("ItemThumbnails", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>arjmart.ItemMaster.ItemDescription</code>.
     */
    public final TableField<ItemmasterRecord, String> ITEMDESCRIPTION = createField("ItemDescription", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>arjmart.ItemMaster</code> table reference
     */
    public Itemmaster() {
        this(DSL.name("ItemMaster"), null);
    }

    /**
     * Create an aliased <code>arjmart.ItemMaster</code> table reference
     */
    public Itemmaster(String alias) {
        this(DSL.name(alias), ITEMMASTER);
    }

    /**
     * Create an aliased <code>arjmart.ItemMaster</code> table reference
     */
    public Itemmaster(Name alias) {
        this(alias, ITEMMASTER);
    }

    private Itemmaster(Name alias, Table<ItemmasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Itemmaster(Name alias, Table<ItemmasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Itemmaster(Table<O> child, ForeignKey<O, ItemmasterRecord> key) {
        super(child, key, ITEMMASTER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Arjmart.ARJMART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEMMASTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemmasterRecord> getPrimaryKey() {
        return Keys.KEY_ITEMMASTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemmasterRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemmasterRecord>>asList(Keys.KEY_ITEMMASTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Itemmaster as(String alias) {
        return new Itemmaster(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Itemmaster as(Name alias) {
        return new Itemmaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Itemmaster rename(String name) {
        return new Itemmaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Itemmaster rename(Name name) {
        return new Itemmaster(name, null);
    }
}
