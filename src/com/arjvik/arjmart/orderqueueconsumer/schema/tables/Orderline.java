/*
 * This file is generated by jOOQ.
 */
package com.arjvik.arjmart.orderqueueconsumer.schema.tables;


import com.arjvik.arjmart.orderqueueconsumer.schema.Arjmart;
import com.arjvik.arjmart.orderqueueconsumer.schema.Indexes;
import com.arjvik.arjmart.orderqueueconsumer.schema.Keys;
import com.arjvik.arjmart.orderqueueconsumer.schema.tables.records.OrderlineRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orderline extends TableImpl<OrderlineRecord> {

    private static final long serialVersionUID = -769566276;

    /**
     * The reference instance of <code>arjmart.OrderLine</code>
     */
    public static final Orderline ORDERLINE = new Orderline();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderlineRecord> getRecordType() {
        return OrderlineRecord.class;
    }

    /**
     * The column <code>arjmart.OrderLine.OrderID</code>.
     */
    public final TableField<OrderlineRecord, Integer> ORDERID = createField("OrderID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.OrderLine.OrderLineID</code>.
     */
    public final TableField<OrderlineRecord, Integer> ORDERLINEID = createField("OrderLineID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>arjmart.OrderLine.SKU</code>.
     */
    public final TableField<OrderlineRecord, Integer> SKU = createField("SKU", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.OrderLine.ItemAttributeID</code>.
     */
    public final TableField<OrderlineRecord, Integer> ITEMATTRIBUTEID = createField("ItemAttributeID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.OrderLine.Quantity</code>.
     */
    public final TableField<OrderlineRecord, Integer> QUANTITY = createField("Quantity", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.OrderLine.Status</code>.
     */
    public final TableField<OrderlineRecord, String> STATUS = createField("Status", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("Pending", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>arjmart.OrderLine</code> table reference
     */
    public Orderline() {
        this(DSL.name("OrderLine"), null);
    }

    /**
     * Create an aliased <code>arjmart.OrderLine</code> table reference
     */
    public Orderline(String alias) {
        this(DSL.name(alias), ORDERLINE);
    }

    /**
     * Create an aliased <code>arjmart.OrderLine</code> table reference
     */
    public Orderline(Name alias) {
        this(alias, ORDERLINE);
    }

    private Orderline(Name alias, Table<OrderlineRecord> aliased) {
        this(alias, aliased, null);
    }

    private Orderline(Name alias, Table<OrderlineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Orderline(Table<O> child, ForeignKey<O, OrderlineRecord> key) {
        super(child, key, ORDERLINE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Arjmart.ARJMART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORDERLINE_ORDERLINE_ORDERID_IDX, Indexes.ORDERLINE_ORDERLINE_SKU_ITEMATTRIBUTEID_IDX, Indexes.ORDERLINE_ORDERLINE_UNIQUE, Indexes.ORDERLINE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderlineRecord> getPrimaryKey() {
        return Keys.KEY_ORDERLINE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderlineRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderlineRecord>>asList(Keys.KEY_ORDERLINE_PRIMARY, Keys.KEY_ORDERLINE_ORDERLINE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderlineRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderlineRecord, ?>>asList(Keys.ORDERLINE_ORDERID, Keys.ORDERLINE_SKU_ITEMATTRIBUTEID);
    }

    public Order order() {
        return new Order(this, Keys.ORDERLINE_ORDERID);
    }

    public Itemattributemaster itemattributemaster() {
        return new Itemattributemaster(this, Keys.ORDERLINE_SKU_ITEMATTRIBUTEID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Orderline as(String alias) {
        return new Orderline(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Orderline as(Name alias) {
        return new Orderline(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Orderline rename(String name) {
        return new Orderline(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Orderline rename(Name name) {
        return new Orderline(name, null);
    }
}
