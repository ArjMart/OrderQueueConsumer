/*
 * This file is generated by jOOQ.
 */
package com.arjvik.arjmart.orderqueueconsumer.schema.tables.records;


import com.arjvik.arjmart.orderqueueconsumer.schema.tables.Locationmaster;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationmasterRecord extends UpdatableRecordImpl<LocationmasterRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 469305052;

    /**
     * Setter for <code>arjmart.LocationMaster.LocationID</code>.
     */
    public void setLocationid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>arjmart.LocationMaster.LocationID</code>.
     */
    public Integer getLocationid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>arjmart.LocationMaster.Address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>arjmart.LocationMaster.Address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Locationmaster.LOCATIONMASTER.LOCATIONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Locationmaster.LOCATIONMASTER.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getLocationid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getLocationid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationmasterRecord value1(Integer value) {
        setLocationid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationmasterRecord value2(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationmasterRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocationmasterRecord
     */
    public LocationmasterRecord() {
        super(Locationmaster.LOCATIONMASTER);
    }

    /**
     * Create a detached, initialised LocationmasterRecord
     */
    public LocationmasterRecord(Integer locationid, String address) {
        super(Locationmaster.LOCATIONMASTER);

        set(0, locationid);
        set(1, address);
    }
}
