/*
 * This file is generated by jOOQ.
 */
package com.arjvik.arjmart.orderqueueconsumer.schema.tables;


import com.arjvik.arjmart.orderqueueconsumer.schema.Arjmart;
import com.arjvik.arjmart.orderqueueconsumer.schema.Indexes;
import com.arjvik.arjmart.orderqueueconsumer.schema.Keys;
import com.arjvik.arjmart.orderqueueconsumer.schema.tables.records.LocationmasterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Locationmaster extends TableImpl<LocationmasterRecord> {

    private static final long serialVersionUID = -1341946749;

    /**
     * The reference instance of <code>arjmart.LocationMaster</code>
     */
    public static final Locationmaster LOCATIONMASTER = new Locationmaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LocationmasterRecord> getRecordType() {
        return LocationmasterRecord.class;
    }

    /**
     * The column <code>arjmart.LocationMaster.LocationID</code>.
     */
    public final TableField<LocationmasterRecord, Integer> LOCATIONID = createField("LocationID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>arjmart.LocationMaster.Address</code>.
     */
    public final TableField<LocationmasterRecord, String> ADDRESS = createField("Address", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * Create a <code>arjmart.LocationMaster</code> table reference
     */
    public Locationmaster() {
        this(DSL.name("LocationMaster"), null);
    }

    /**
     * Create an aliased <code>arjmart.LocationMaster</code> table reference
     */
    public Locationmaster(String alias) {
        this(DSL.name(alias), LOCATIONMASTER);
    }

    /**
     * Create an aliased <code>arjmart.LocationMaster</code> table reference
     */
    public Locationmaster(Name alias) {
        this(alias, LOCATIONMASTER);
    }

    private Locationmaster(Name alias, Table<LocationmasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Locationmaster(Name alias, Table<LocationmasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Locationmaster(Table<O> child, ForeignKey<O, LocationmasterRecord> key) {
        super(child, key, LOCATIONMASTER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Arjmart.ARJMART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOCATIONMASTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LocationmasterRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOCATIONMASTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LocationmasterRecord> getPrimaryKey() {
        return Keys.KEY_LOCATIONMASTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LocationmasterRecord>> getKeys() {
        return Arrays.<UniqueKey<LocationmasterRecord>>asList(Keys.KEY_LOCATIONMASTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Locationmaster as(String alias) {
        return new Locationmaster(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Locationmaster as(Name alias) {
        return new Locationmaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Locationmaster rename(String name) {
        return new Locationmaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Locationmaster rename(Name name) {
        return new Locationmaster(name, null);
    }
}
