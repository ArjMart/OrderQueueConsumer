/*
 * This file is generated by jOOQ.
 */
package com.arjvik.arjmart.orderqueueconsumer.schema.tables;


import com.arjvik.arjmart.orderqueueconsumer.schema.Arjmart;
import com.arjvik.arjmart.orderqueueconsumer.schema.Indexes;
import com.arjvik.arjmart.orderqueueconsumer.schema.Keys;
import com.arjvik.arjmart.orderqueueconsumer.schema.tables.records.ItemattributemasterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Itemattributemaster extends TableImpl<ItemattributemasterRecord> {

    private static final long serialVersionUID = 1194544151;

    /**
     * The reference instance of <code>arjmart.ItemAttributeMaster</code>
     */
    public static final Itemattributemaster ITEMATTRIBUTEMASTER = new Itemattributemaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemattributemasterRecord> getRecordType() {
        return ItemattributemasterRecord.class;
    }

    /**
     * The column <code>arjmart.ItemAttributeMaster.SKU</code>.
     */
    public final TableField<ItemattributemasterRecord, Integer> SKU = createField("SKU", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.ItemAttributeMaster.ItemAttributeID</code>.
     */
    public final TableField<ItemattributemasterRecord, Integer> ITEMATTRIBUTEID = createField("ItemAttributeID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>arjmart.ItemAttributeMaster.Color</code>.
     */
    public final TableField<ItemattributemasterRecord, String> COLOR = createField("Color", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>arjmart.ItemAttributeMaster.Size</code>.
     */
    public final TableField<ItemattributemasterRecord, String> SIZE = createField("Size", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * Create a <code>arjmart.ItemAttributeMaster</code> table reference
     */
    public Itemattributemaster() {
        this(DSL.name("ItemAttributeMaster"), null);
    }

    /**
     * Create an aliased <code>arjmart.ItemAttributeMaster</code> table reference
     */
    public Itemattributemaster(String alias) {
        this(DSL.name(alias), ITEMATTRIBUTEMASTER);
    }

    /**
     * Create an aliased <code>arjmart.ItemAttributeMaster</code> table reference
     */
    public Itemattributemaster(Name alias) {
        this(alias, ITEMATTRIBUTEMASTER);
    }

    private Itemattributemaster(Name alias, Table<ItemattributemasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Itemattributemaster(Name alias, Table<ItemattributemasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Itemattributemaster(Table<O> child, ForeignKey<O, ItemattributemasterRecord> key) {
        super(child, key, ITEMATTRIBUTEMASTER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Arjmart.ARJMART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEMATTRIBUTEMASTER_ITEMATTRIBUTE_UNIQUE, Indexes.ITEMATTRIBUTEMASTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemattributemasterRecord> getPrimaryKey() {
        return Keys.KEY_ITEMATTRIBUTEMASTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemattributemasterRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemattributemasterRecord>>asList(Keys.KEY_ITEMATTRIBUTEMASTER_PRIMARY, Keys.KEY_ITEMATTRIBUTEMASTER_ITEMATTRIBUTE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ItemattributemasterRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemattributemasterRecord, ?>>asList(Keys.ITEMATTRIBUTE_SKU);
    }

    public Itemmaster itemmaster() {
        return new Itemmaster(this, Keys.ITEMATTRIBUTE_SKU);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Itemattributemaster as(String alias) {
        return new Itemattributemaster(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Itemattributemaster as(Name alias) {
        return new Itemattributemaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Itemattributemaster rename(String name) {
        return new Itemattributemaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Itemattributemaster rename(Name name) {
        return new Itemattributemaster(name, null);
    }
}
