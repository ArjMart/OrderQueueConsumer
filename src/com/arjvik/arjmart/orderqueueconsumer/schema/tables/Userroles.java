/*
 * This file is generated by jOOQ.
 */
package com.arjvik.arjmart.orderqueueconsumer.schema.tables;


import com.arjvik.arjmart.orderqueueconsumer.schema.Arjmart;
import com.arjvik.arjmart.orderqueueconsumer.schema.Indexes;
import com.arjvik.arjmart.orderqueueconsumer.schema.Keys;
import com.arjvik.arjmart.orderqueueconsumer.schema.tables.records.UserrolesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userroles extends TableImpl<UserrolesRecord> {

    private static final long serialVersionUID = 148354835;

    /**
     * The reference instance of <code>arjmart.UserRoles</code>
     */
    public static final Userroles USERROLES = new Userroles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserrolesRecord> getRecordType() {
        return UserrolesRecord.class;
    }

    /**
     * The column <code>arjmart.UserRoles.UserID</code>.
     */
    public final TableField<UserrolesRecord, Integer> USERID = createField("UserID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>arjmart.UserRoles.Role</code>.
     */
    public final TableField<UserrolesRecord, String> ROLE = createField("Role", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * Create a <code>arjmart.UserRoles</code> table reference
     */
    public Userroles() {
        this(DSL.name("UserRoles"), null);
    }

    /**
     * Create an aliased <code>arjmart.UserRoles</code> table reference
     */
    public Userroles(String alias) {
        this(DSL.name(alias), USERROLES);
    }

    /**
     * Create an aliased <code>arjmart.UserRoles</code> table reference
     */
    public Userroles(Name alias) {
        this(alias, USERROLES);
    }

    private Userroles(Name alias, Table<UserrolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userroles(Name alias, Table<UserrolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Userroles(Table<O> child, ForeignKey<O, UserrolesRecord> key) {
        super(child, key, USERROLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Arjmart.ARJMART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERROLES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserrolesRecord> getPrimaryKey() {
        return Keys.KEY_USERROLES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserrolesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserrolesRecord>>asList(Keys.KEY_USERROLES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserrolesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserrolesRecord, ?>>asList(Keys.USERROLES_USERID);
    }

    public User user() {
        return new User(this, Keys.USERROLES_USERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userroles as(String alias) {
        return new Userroles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userroles as(Name alias) {
        return new Userroles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userroles rename(String name) {
        return new Userroles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Userroles rename(Name name) {
        return new Userroles(name, null);
    }
}
